{"version":3,"file":"content-script.js","mappings":";;;;;;;AAAA;AAEA;AAAA;AACA;AACA;AACA;AAEA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAMA;AACA;AACA;AACA;AACA;AAGA;AACA","sources":["webpack://bionic-reader-extension/./src/content-script.ts"],"sourcesContent":["let CS_LOG_PREFIX = \"[Bionic Reader Extension: CS via BG]\";\n\nenum ITypesCS {\n    log,\n    action\n}\n\n/**\n *\n * Send a message to another part of the extension\n *\n * @param message [string] the message to log (if any)\n * @param type [ITypesCS] the type of event we're sending\n */\nfunction sendMessage(message: string, type: ITypesCS) {\n    chrome.runtime.sendMessage({ message, prefix: CS_LOG_PREFIX, type }, (response) => {\n        if (response) {\n            console.log(response);\n        }\n    });\n}\n\n/**\n *\n * Auto-grab Paragraphs on a matching page\n *\n * Description: this is a rudimentary function which uses very little intelligence to grab all paragraph text\n * so that it can be parsed/formatted!\n *\n */\nfunction autoGrabParagraphs() {\n    const paragraphs = document.querySelectorAll('body p');\n    paragraphs.forEach((paragraph: any) => {\n        sendMessage(paragraph.innerHTML.toString() || 'null', ITypesCS.action);\n    });\n}\n\n/**\n *\n * Initialise the content-script\n *\n * Description: embeds into the active page to perform DOM interactions, allowing us to modify article text etc\n *\n */\nfunction initContentScript() {\n    sendMessage(\"Content script initialised!\", ITypesCS.log);\n    autoGrabParagraphs();\n}\n\n\n// this will only happen on pages matching the content-scripts \"matches\" list of URLs for now\ninitContentScript();"],"names":[],"sourceRoot":""}